{"version":3,"sources":["Card.js","List.js","App.js","index.js","store.js"],"names":["Card","props","className","type","title","content","List","header","cards","map","card","key","App","store","this","lists","list","id","cardIds","allCards","Component","defaultProps","bindThis","toThat","document","getElementById","ReactDOM","render"],"mappings":"yRAuBeA,MARf,SAAcC,GACV,OAAQ,yBAAKC,UAAU,QACb,4BAAQC,KAAK,UAAb,UACA,4BAAKF,EAAMG,OACX,2BAAIH,EAAMI,WCKT,SAASC,EAAKL,GACzB,OACI,6BACI,6BAASC,UAAU,QACf,4BAAQA,UAAU,eACd,4BAAKD,EAAMM,SAEf,yBAAKL,UAAU,cAEVD,EAAMO,MAAMC,KAAI,SAACC,GAAD,OACb,kBAAC,EAAD,CACIC,IAAKD,EAAKC,IACVP,MAAOM,EAAKN,MACZC,QAASK,EAAKL,aAGtB,4BAAQF,KAAK,SAASD,UAAU,mBAAhC,wB,UCbdU,E,uKASM,IACAC,EAAUC,KAAKb,MAAfY,MACR,OACE,0BAAMX,UAAU,OACd,4BAAQA,UAAU,cAChB,2CAEF,yBAAKA,UAAU,YAEZW,EAAME,MAAMN,KAAI,SAAAO,GAAI,OACnB,kBAAC,EAAD,CACEL,IAAKK,EAAKC,GACVV,OAAQS,EAAKT,OAEbC,MAAOQ,EAAKE,QAAQT,KAAI,SAAAQ,GAAE,OAAIJ,EAAMM,SAASF,iB,GAvBzCG,aAAZR,EAEGS,aAAe,CACpBR,MAAO,CACLE,MAAO,GACPI,SAAU,KA2BDP,QCtDXU,EAAW,kBAAC,EAAD,CAAKT,MCLL,CAAEE,MAAO,CAClB,CACEE,GAAI,IACJV,OAAQ,aACRW,QAAS,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAEhD,CACED,GAAI,IACJV,OAAQ,cACRW,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE1C,CACED,GAAI,IACJV,OAAQ,aACRW,QAAS,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAEzE,CACED,GAAI,IACJV,OAAQ,cACRW,QAAS,CAAE,IAAK,OAGpBC,SAAU,CACR,EAAK,CAAEF,GAAI,IAAKb,MAAO,aAAcC,QAAS,eAC9C,EAAK,CAAEY,GAAI,IAAKb,MAAO,cAAeC,QAAS,eAC/C,EAAK,CAAEY,GAAI,IAAKb,MAAO,aAAcC,QAAS,eAC9C,EAAK,CAAEY,GAAI,IAAKb,MAAO,cAAeC,QAAS,eAC/C,EAAK,CAAEY,GAAI,IAAKb,MAAO,aAAcC,QAAS,eAC9C,EAAK,CAAEY,GAAI,IAAKb,MAAO,aAAcC,QAAS,eAC9C,EAAK,CAAEY,GAAI,IAAKb,MAAO,eAAgBC,QAAS,eAChD,EAAK,CAAEY,GAAI,IAAKb,MAAO,cAAeC,QAAS,eAC/C,EAAK,CAAEY,GAAI,IAAKb,MAAO,aAAcC,QAAS,eAC9C,EAAK,CAAEY,GAAI,IAAKb,MAAO,aAAcC,QAAS,eAC9C,EAAK,CAAEY,GAAI,IAAKb,MAAO,gBAAiBC,QAAS,eACjD,EAAK,CAAEY,GAAI,IAAKb,MAAO,eAAgBC,QAAS,eAChD,EAAK,CAAEY,GAAI,IAAKb,MAAO,kBAAmBC,QAAS,mBD7BrDkB,EAASC,SAASC,eAAe,QAErCC,IAASC,OAAOL,EAAUC,K","file":"static/js/main.d0e52e61.chunk.js","sourcesContent":["/* Card.js:\r\n\r\nThe Card component should render markup matching design.html: \r\n   * a div with a class of 'Card' containing an h3 for the card's title \r\n   * a p element for the card's content\r\n   \r\nThe Card component accepts 2 props: \r\n   * title - a string of the card's title \r\n   * content - a string of the card's content\r\n\r\nprops will be passed in for each Card from the List component.*/\r\n\r\nimport React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n    return (<div className=\"Card\">\r\n              <button type=\"button\">delete</button>\r\n              <h3>{props.title}</h3>\r\n              <p>{props.content}</p>\r\n            </div>);\r\n}\r\n\r\nexport default Card;","/* List.js:\r\n\r\nThe List component should render markup matching design.html\r\n    * a section with a class of 'List' \r\n        - contains a header and div with class 'List-cards'\r\n\r\nThe List component accepts 2 props: \r\n    * header - a string of the header of the card to render \r\n    * cards  - an array of card objects\r\n        -- each object should have a title and content\r\n\r\nThese props will be passed in for each List from the App component.\r\n\r\nThe List should render a Card component for each of the cards in the cards array prop.\r\n\r\nEach instance of the Card component should be passed 2 props (and a key). \r\n      The 2 props are: \r\n          * title   - a string for the Card's title\r\n          * content - a string of the Card's content */\r\n\r\nimport React from 'react';\r\nimport './List.css';\r\nimport Card from './Card';\r\n\r\nexport default function List(props) {\r\n    return (\r\n        <div>\r\n            <section className=\"List\">\r\n                <header className=\"List-header\">\r\n                    <h2>{props.header}</h2>\r\n                </header>\r\n                <div className=\"List-cards\">\r\n                    {/*map each card's state to a card component*/}\r\n                    {props.cards.map((card) =>\r\n                        <Card\r\n                            key={card.key}\r\n                            title={card.title}\r\n                            content={card.content}\r\n                        />\r\n                    )}\r\n                    <button type=\"button\" className=\"List-add-button\">\r\n                        + Add Random Card\r\n                    </button>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}","/* App.js:\n\nThe App component should render markup matching design.html: \n    * the main element, \n    * a header with the h1 and \n    * a div with class 'App-list'\n\nThe App component will accept 1 prop, store.\n\nThe store prop is an object with 2 keys: \n    * lists    - an array of objects \n    * allCards - an object where each key is a card's ID and the value is the card object with a title and content\n\nDummy STORE object is provided in store.js\n\nThe App should render a List component for each of the items in the store.lists array.\n\nEach instance of the List component should be passed 2 props (and a key). \n\nThe 2 props are:\n    * header - a string for the List's header\n    * cards  - an array of card objects\n        + You'll need to combine the cardIds array for the list with the allCards object. */\n\nimport React, { Component } from 'react';\nimport List from './List'\nimport './App.css';\nclass App extends Component {\n\n  static defaultProps = {\n    store: {\n      lists: [],\n      allCards: {},\n    }\n  };\n\n  render() {\n    const { store } = this.props\n    return (\n      <main className='App'>\n        <header className='App-header'>\n          <h1>Trelloyes!</h1>\n        </header>\n        <div className='App-list'>\n          {/*Map each list's state to a List component*/}\n          {store.lists.map(list => (\n            <List\n              key={list.id}\n              header={list.header}\n              // Any card with the specified id goes in the list containing it.\n              cards={list.cardIds.map(id => store.allCards[id])}\n            />\n          ))}\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport App from './App';\n\nlet bindThis = <App store={store} />;\nlet toThat = document.getElementById('root');\n\nReactDOM.render(bindThis, toThat);","export default { lists: [\r\n      {\r\n        id: '1',\r\n        header: 'First list',\r\n        cardIds: [ 'a', 'b', 'e', 'f', 'g', 'j', 'l', 'm' ],\r\n      },\r\n      {\r\n        id: '2',\r\n        header: 'Second list',\r\n        cardIds: ['b', 'c', 'd', 'f', 'h', 'i', 'k'],\r\n      },\r\n      {\r\n        id: '3',\r\n        header: 'Third list',\r\n        cardIds: [ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm' ],\r\n      },\r\n      {\r\n        id: '4',\r\n        header: 'Fourth list',\r\n        cardIds: [ 'l', 'm' ],\r\n      },\r\n    ],\r\n    allCards: {\r\n      'a': { id: 'a', title: 'First card', content: 'lorem ipsum' },\r\n      'b': { id: 'b', title: 'Second card', content: 'lorem ipsum' },\r\n      'c': { id: 'c', title: 'Third card', content: 'lorem ipsum' },\r\n      'd': { id: 'd', title: 'Fourth card', content: 'lorem ipsum' },\r\n      'e': { id: 'e', title: 'Fifth card', content: 'lorem ipsum' },\r\n      'f': { id: 'f', title: 'Sixth card', content: 'lorem ipsum' },\r\n      'g': { id: 'g', title: 'Seventh card', content: 'lorem ipsum' },\r\n      'h': { id: 'h', title: 'Eighth card', content: 'lorem ipsum' },\r\n      'i': { id: 'i', title: 'Ninth card', content: 'lorem ipsum' },\r\n      'j': { id: 'j', title: 'Tenth card', content: 'lorem ipsum' },\r\n      'k': { id: 'k', title: 'Eleventh card', content: 'lorem ipsum' },\r\n      'l': { id: 'l', title: 'Twelfth card', content: 'lorem ipsum' },\r\n      'm': { id: 'm', title: 'Thirteenth card', content: 'lorem ipsum' },\r\n    },\r\n  }"],"sourceRoot":""}